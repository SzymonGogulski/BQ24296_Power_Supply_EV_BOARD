#include "func.h"
#include "main.h"
#include <stdio.h>

int counter = 0;

int _write(int file, char *ptr, int len){
	int i=0;
	for (i=0; i<len; i++){
		ITM_SendChar((*ptr++));
	}
	return len;
}

void user_code_2(void) {

    // Check if device powered up or woke up from standby
    if (__HAL_PWR_GET_FLAG(PWR_FLAG_SB) != RESET){                              // device woke up
        
        printf("Woke up from STANDBY\n");
        __HAL_PWR_CLEAR_FLAG(PWR_FLAG_SB);
        HAL_PWR_DisableWakeUpPin(ON);

        for (int i=0;i<10;i++){
            HAL_Delay(300);
            HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);                // Drive PC13 HIGH -> LED OFF
            HAL_Delay(300);
            HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
        }
    } else {                                                                    // device powered up
        printf("Device powered up\n");
    }

    HAL_GPIO_WritePin(GPIOB, EN5V_Pin, GPIO_PIN_SET);
    printf("Going into main loop\n");
}

void user_code_3(void) {
    // Pooling ON/OFF button
    if (HAL_GPIO_ReadPin(GPIOA, OFF_Pin) == GPIO_PIN_SET){

        printf("Going to STANDBY ...\n");

        for (int i = 0; i < 60; i++){
        HAL_Delay(50);
        HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET); // Drive PC13 HIGH -> LED OFF
        HAL_Delay(50);
        HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
        }

        HAL_GPIO_WritePin(GPIOB, EN5V_Pin, GPIO_PIN_RESET);
        __HAL_PWR_CLEAR_FLAG(PWR_FLAG_WU);
        HAL_PWR_EnableWakeUpPin(ON);
        printf("STANBY mode\n");
        HAL_PWR_EnterSTANDBYMode();
    }

    if (HAL_GPIO_ReadPin(GPIOB, REACT_Pin) == GPIO_PIN_SET) {

        HAL_GPIO_WritePin(GPIOB, TRIG_Pin, GPIO_PIN_SET);
        counter++;
        printf("Current counter value: %d \n", counter);
    } else {
        HAL_GPIO_WritePin(GPIOB, TRIG_Pin, GPIO_PIN_RESET);
    }

}
